/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.Timer;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.io.*;
import java.awt.*;
import java.text.SimpleDateFormat;
import java.util.Date;


/**
 *
 * @author saksh
 */
public class atmmenu extends javax.swing.JFrame {

    /**
     * Creates new form atmmenu
     */
    public atmmenu() {
        initComponents();
    }
    public String card; 
   /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 400, 30));

        jButton1.setBackground(new java.awt.Color(0, 102, 204));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("LOGOUT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 320, 120, 30));

        jButton2.setBackground(new java.awt.Color(0, 102, 153));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("DEPOSIT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 180, 30));

        jButton3.setBackground(new java.awt.Color(0, 102, 153));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("CHNAGE PIN");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, 150, 30));

        jButton4.setBackground(new java.awt.Color(0, 102, 153));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("BALANCE ENQUIRY");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, 30));

        jButton5.setBackground(new java.awt.Color(0, 102, 153));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("WITHDRAW");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 180, 30));

        jButton6.setBackground(new java.awt.Color(0, 102, 153));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("HISTORY");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 170, 170, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home21.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 380));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void WelcomeUser(String username, String card) {
        this.card= card;
    String baseText = "     Welcome, " + username + "    ";
    final String[] scrollingText = { baseText };

    jLabel2.setText(scrollingText[0]);  // Set initial text
    Timer timer = new Timer(200, new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            scrollingText[0] = scrollingText[0].substring(1) + scrollingText[0].charAt(0);
            jLabel2.setText(scrollingText[0]);
        }
    });
    timer.start();
}

    MongoDatabase db = DatabaseConnection.getDatabase();
        MongoCollection<Document> collection = db.getCollection("users");
        // Find user document
        Document query = new Document("cardnumber", card);  // cardNumber must be available in your class
        Document userDoc = collection.find(query).first();
        
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new home().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
        String currentPin = JOptionPane.showInputDialog(this, "Enter Current PIN:");
        if (currentPin == null || currentPin.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Current PIN is required.");
            return;
        }

        MongoDatabase db = DatabaseConnection.getDatabase();
        MongoCollection<Document> collection = db.getCollection("users");
        
        Document query = new Document("cardnumber", card);
        Document userDoc = collection.find(query).first();
        Double balance = userDoc.getDouble("balance");



        if (userDoc == null) {
            JOptionPane.showMessageDialog(this, "User not found.");
            return;
        }

        String storedPin = userDoc.getString("pin");
        if (!storedPin.equals(currentPin)) {
            JOptionPane.showMessageDialog(this, "Incorrect current PIN.");
            return;
        }

        String newPin = JOptionPane.showInputDialog(this, "Enter New PIN (4 digits):");
        if (newPin == null || !newPin.matches("\\d{4}")) {
            JOptionPane.showMessageDialog(this, "Invalid new PIN. It must be 4 digits.");
            return;
        }

        String confirmPin = JOptionPane.showInputDialog(this, "Confirm New PIN:");
        if (!newPin.equals(confirmPin)) {
            JOptionPane.showMessageDialog(this, "PINs do not match.");
            return;
        }

        // Update pin
        Document update = new Document("$set", new Document("pin", newPin));
        collection.updateOne(query, update);

        // Log to history
        Document historyEntry = new Document("type", "pin change")
            .append("amount", "-")
            .append("Old pin", storedPin)
            .append("New pin", newPin)
            .append("previousBalance", balance)
            .append("newBalance", balance)
            .append("date", new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));
        collection.updateOne(query, new Document("$push", new Document("history", historyEntry)));

        JOptionPane.showMessageDialog(this, "PIN changed successfully.");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        balance bal=new balance();
        bal.get(card);
         bal.setVisible(true);
         this.dispose();
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        deposit dep=new deposit();
        dep.depositMoney(card);
         dep.setVisible(true);
         this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        withdraw wid=new withdraw();
        wid.withdrawMoney(card);
        wid.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
       
        try {
        MongoDatabase db = DatabaseConnection.getDatabase();
        MongoCollection<Document> collection = db.getCollection("users");

        Document query = new Document("cardnumber", card); // ensure field name matches MongoDB
        Document userDoc = collection.find(query).first();

        if (userDoc == null) {
            JOptionPane.showMessageDialog(this, "User not found.");
            return;
        }

        File file = new File("transaction_history.txt");
        FileWriter writer = new FileWriter(file);

        writer.write("Transaction History for Card: " + card + "\n\n");

        java.util.List<Document> history = (java.util.List<Document>) userDoc.get("history");
        if (history == null || history.isEmpty()) {
            writer.write("No transactions found.\n");
        } else {
            for (Document txn : history) {
                String type = txn.getString("type");

                Object amountObj = txn.get("amount");
                String amountStr = amountObj != null ? amountObj.toString() : "-";

                double prev = txn.get("previousBalance") instanceof Number
                    ? ((Number) txn.get("previousBalance")).doubleValue() : 0;
                double curr = txn.get("newBalance") instanceof Number
                    ? ((Number) txn.get("newBalance")).doubleValue() : 0;

                Object dateObj = txn.get("date");
                String dateStr;
                if (dateObj instanceof Date) {
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    dateStr = sdf.format((Date) dateObj);
                } else {
                    dateStr = dateObj != null ? dateObj.toString() : "Unknown";
                }

                writer.write("Type             : " + type + "\n");
                writer.write("Amount           : " + amountStr + "\n");
                writer.write("Previous Balance : " + prev + "\n");
                writer.write("New Balance      : " + curr + "\n");
                writer.write("Date             : " + dateStr + "\n\n");
            }
        }

        writer.close();
        JOptionPane.showMessageDialog(this, "Transaction history saved to 'transaction_history.txt'");
        Desktop.getDesktop().edit(file);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error generating history: " + e.toString());
    } 


        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(atmmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(atmmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(atmmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(atmmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               new atmmenu().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
