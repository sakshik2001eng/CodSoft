/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

//import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoCollection;
import org.bson.Document;
import java.util.*;
import javax.swing.JOptionPane;


/**
 *
 * @author saksh
 */
public class withdraw extends javax.swing.JFrame {

    /**
     * Creates new form withdraw
     */
    
    String card;
    String currentBalance;
    Double cur;
            
    public void withdrawMoney(String card)
    {
        this.card= card;
        
        try
        {
            MongoDatabase db = DatabaseConnection.getDatabase();
            MongoCollection<Document> collection = db.getCollection("users");


            Document query = new Document("cardnumber", card);
            Document userDoc = collection.find(query).first();
            
            
             String balance = userDoc.get("balance").toString(); 
                jLabel5.setText("Rs. "+balance);
         
            this.cur= Double.valueOf(balance);
            

            
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
            
            
    public withdraw() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("WITHDRAW MONEY");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("AMOUNT");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 90, 30));

        jTextField1.setBackground(new java.awt.Color(0, 153, 204));
        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 120, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Available bank balance is ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 200, 30));

        jButton1.setBackground(new java.awt.Color(0, 102, 153));
        jButton1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("CANCEL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 240, 130, -1));

        jButton2.setBackground(new java.awt.Color(0, 102, 153));
        jButton2.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("WITHDRAW");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 130, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/withdraw.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-80, 0, 560, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        MongoDatabase db = DatabaseConnection.getDatabase();
        MongoCollection<Document> collection = db.getCollection("users");
        Document query = new Document("cardnumber", card);
        Document userdoc = collection.find(query).first();
        String username= userdoc.getString("name");
        
        atmmenu atm=new atmmenu();
        atm.WelcomeUser(username,card);
         atm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
                                      
    String amountStr = jTextField1.getText().trim();
    
    if (amountStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter an amount.", "Input Error", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        double withdrawAmount = Double.parseDouble(amountStr);
        
        double balance = cur;

        if (withdrawAmount <= 0) {
            JOptionPane.showMessageDialog(this, "Amount must be greater than 0.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (withdrawAmount > balance) {
            JOptionPane.showMessageDialog(this, "Insufficient balance.", "Transaction Failed", JOptionPane.WARNING_MESSAGE);
            return;
        }

        double newBalance = balance - withdrawAmount;

        // MongoDB connection
        MongoDatabase db = DatabaseConnection.getDatabase();
        MongoCollection<Document> collection = db.getCollection("users");

        // Build query
        Document query = new Document("cardnumber", card);
        
        
        
       

             Document userDoc = collection.find(query).first();
            
            
             

        // Prepare transaction history entry
        Document transaction = new Document("type", "withdrawal")
            .append("amount", withdrawAmount)
            .append("previousBalance", currentBalance)
            .append("newBalance", newBalance)
            .append("date", new Date());

        // Perform update
        Document update = new Document("$set", new Document("balance",newBalance))
            .append("$push", new Document("history", transaction));

        collection.updateOne(query, update);

        // Show success message
        JOptionPane.showMessageDialog(this, "Withdrawal successful. Current Amount : " + newBalance);
        jLabel5.setText(String.valueOf(newBalance));
        cur = newBalance; // update local state    
        
        
        
        String balance1 = userDoc.get("balance").toString(); 
                jLabel5.setText(balance1);
                
                
                
        Document userdoc = collection.find(query).first();
        String username= userdoc.getString("name");
        
        atmmenu atm=new atmmenu();
        atm.WelcomeUser(username,card);
         atm.setVisible(true);
        this.dispose();
                

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid numeric amount.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error during withdrawal: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
   
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(withdraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(withdraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(withdraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(withdraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new withdraw().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
